#include <iostream>

/*
    Напишете функция `void findTheGreaterValue` с подходящи параметри представящи две променливи от тип int и
    един указател към променливи от тип int и след изпълнението на която, указателят сочи към променливата с по-голяма стойност.
*/

// Функцията приема указатели към първото и второто число, но приема и трети параметър,
// който е референция към указател. Можем да игнорираме грозния синтаксис *&, но важното
// е да знаем, че винаги когато функция приема референция като параметър, това означава,
// че функцията ще работи директно с това което й се подаде при извикване, а не с негово
// копие. А това е именно това коеот искаме тук - искаме да пренасочим указателя, който
// се подава на функцията и това пренасочване да е факт и след изпълнението на функцията.
void findTheGreaterValue(int *first, int *second, int *&pointer)
{
    if (*first >= *second)
    {
        pointer = first;
    }
    else
    {
        pointer = second;
    }
}

int main()
{

    int a = 3;
    int b = 4;
    int *greaterPtr;

    std::cout << "Before function: a = " << a << ", b = " << b << std::endl;

    findTheGreaterValue(&a, &b, greaterPtr);
    *greaterPtr = 10;

    std::cout << "After function: a = " << a << ", b = " << b << std::endl;

    return 0;
}