#include <iostream>

/*
    Напишете булева функция, която приема матрица NxN (N<=100), и която връща true,
    ако всички елементи под главния диагонал на матрицата са равни на нула и false в противен случай.
*/

// Също катко в предната задача, най-важното е да разберем какво характеризира елементите под главния диагонал.
// Това което ги характеризира, е че индексът на реда им е по-голям от индекса на колона. За елементите над главния диагонал
// е обратното - индексът на колоната е по-голям от индекса на реда. Мястото, където двата индекса са равни е точно главният диагонал.
bool isUpperTriangular(int matrix[100][100], int n)
{
    for (int i = 0; i < n; i++)
    {
        // Този път не обхождаме всички елементи на всеки ред, а само тези, които са на колона, чийто индекс е по-малък от индекса на текущия ред.
        for (int j = 0; j < i; j++)
        {
            if (matrix[i][j] != 0)
            {
                return false;
            }
        }
    }

    return true;
}

int main()
{
    int matrix[100][100] = {
        {1, 2, 3, 8},
        {0, 5, 2, 4},
        {0, 0, 3, 4},
        {0, 0, 0, 10}};

    std::cout << isUpperTriangular(matrix, 4) << std::endl;

    return 0;
}