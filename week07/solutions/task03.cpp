#include <iostream>

/*
    Напишете функция `int deFlatten(int arr[], int columns, int i, int j)`, която разглежда едномерен масив като двумерен.
*/

// С тази функция ще симулираме двумерен масив с едномерен. Както знаем, паметта е линейна, и реално с тази функция
// ще имитираме какво всъщност прави компилаторът, когато ние ползваме многомерни масиви.
// Начинът, по който ще представим матрицата с едномирен масив, е следният:
// Елементите на първия ред ще са най-отпред в масива, след това ще са елементите на втория ред и т.н.
// Т.е. първия ред(с индекс 0) ще е на индекси 0, 1, 2, ...., cols - 1 ; втория ред(с индекс 1) ще е на индекси cols, cols + 1, cols + 2, ...., cols + cols - 1
// i-ия ред ще е на индекси cols*i, cols*i + 1, cols*i + 2, ... cols*i + cols -1.
// Това наблюдения ни дава следната формула за намиране на елемент на ред i и колона j: i * cols + j.
// Компилаторът прави същото, когато ползваме нормални двумерни масиви, затова е много важно да знае колко са на брой колоните.
int deFlatten(int matrix[], int cols, int i, int j)
{
    int index = i * cols + j;
    return matrix[index];
}

int main()
{
    int matrix[9] = {1, 2, 3, 4, 5, 6, 7, 8, 9};

    std::cout << deFlatten(matrix, 3, 1, 1) << std::endl;

    return 0;
}